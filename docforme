#!/bin/bash

# This will add a documentation block to all CRUD methods.

function getParam {
	parameter=$1
	parameter=${parameter#*form[\'}
	parameter=${parameter%%\']*}
	echo -e "$parameter"
}

function getSuccess {
	success=$1
	success=${success#*\'}
	success=${success%%\'*}
	echo -e "$success"
}

function getApiParams {

	count=0

	while read line
	do		
		while [[ $line ==  *"form["* && $line != "//"* ]] 
		do
			parameter="["$(getParam "$line")"]"
			if [ ${#paramsArray[@]} -eq 0 ]; then

				paramsArray[$count]=$parameter
				count=$((count+1))
			else

				for j in "${paramsArray[@]}"
				do
					if [ "$parameter" == $j ]; then
						break
					else

						if [ "${paramsArray[$count-1]}" == $j ]; then
							paramsArray[$count]=$parameter
							count=$((count+1))
						fi
					fi
				done
			fi
			line=${line#*form[\'}
		done
	done < $1
}

function getApiSuccess {
	
	count=0
	
	while read lineGAS
	do
		if [[ $lineGAS == *"=>"* && $lineGAS != "//"* ]]; then
			success=$(getSuccess "$lineGAS")
			successArray[$count]=$success
			count=$((count+1))
		fi
	done < $1
}

function setOptionalParams {

	backwfile=$(tac $1)
	echo -ne "$backwfile" >> backwardsfile

	redirects=()
	redirectsSize=0
	linenumber=1
	while read lineSOP
	do

		if [[ $lineSOP == *"redirect(null, 400)"* ]]; then
			redirects[$redirectsSize]=$linenumber
			redirectsSize=$((redirectsSize+1))
		fi
		linenumber=$((linenumber+1))
	done < backwardsfile

	
	for g in "${redirects[@]}"
	do
		linenumber=1
		readcode="off"
		alloptional="false"
		bracketlevel=0
		redirectbracketlvl=0
		while read lineSOP
		do
			if [[ $lineSOP == *"}"* ]]; then
				bracketlevel=$((bracketlevel+1))
			fi
			if [[ $linenumber == $g ]]; then
				readcode="on"
				redirectbracketlvl=$((bracketlevel-1))
			fi
			if [[ $readcode == "on" ]]; then

				#check if redirect is in a single line conditional statement
				if [[ $linenumber -eq $((g+1)) ]]; then
					if [[ $lineSOP == *"else"* || $lineSOP == *"if"* ]]; then
						redirectbracketlvl=$((redirectbracketlvl+1))
					fi
				fi

				if [[ $lineSOP == *"else"*"if"* ]]; then
					alloptional="true"
				fi

				if [[ $alloptional != "true" ]]; then
						for ((h=0; h<${#paramsArray[@]}; h++));
						do
							paramcopy=${paramsArray[$h]#[}
							paramcopy=${paramcopy%]}
							if [[ $lineSOP == *"isset(\$form['"$paramcopy"'])"* ]]; then
								paramsArray[$h]=$paramcopy
							fi
						done
				fi

				if [[ $lineSOP == *"if ("* && $lineSOP != *"else"* && $bracketlevel -eq $redirectbracketlvl ]]; then
					readcode="off"
				fi
			fi

			if [[ $lineSOP == *"{"* ]]; then
				bracketlevel=$((bracketlevel-1))
			fi

			linenumber=$((linenumber+1))
		done < backwardsfile
	done

	rm backwardsfile
}

function readModel {
	directory=$(dirname $(dirname $(readlink -f $1)))"/Model"
	mfilename=${1%Controller*}
	mfilename=${mfilename%s}"."
	mfile=$(find $directory -name "$mfilename*")
	
	linenumberRM=1
	begRM="null"
	endRM="null"
	while read lineRM
	do
		if [[ $lineRM == *"schemaApiToDb"* ]]; then
			begRM=$linenumberRM
		fi
		
		if [ "$begRM" != "null" ]; then
			if [[ $lineRM == *");"* ]]; then
				endRM=$linenumberRM
			fi
		fi
		
		if [ "$begRM" != "null" -a "$endRM" != "null" ]; then
			copyrequestRM=$begRM","$endRM"w dfmtemp"
			sed -n "$copyrequestRM" $mfile
			getApiSuccess dfmtemp
			rm dfmtemp

			break
		fi
		linenumberRM=$((linenumberRM+1))
	done < $mfile

}

function createDocBlock {
	apiGroup=${1%Controller*}
	actionName=$2
	objectName=$apiGroup
	description=$actionName' '$objectName
	description="${description^}"
	apiName=$actionName$objectName
	apiName="${apiName^}"
	objectName="${objectName,,}"
	objectName=${objectName%s}

	echo -ne '	/**\n' >> $3
	echo -ne '	 * @api {post} ?object='"$objectName"'&action='"$actionName"' '"$description"'\n' >> $3
	echo -ne '	 * @apiName '"$apiName"'\n' >> $3
	echo -ne '	 * @apiGroup '"$apiGroup"'\n' >> $3
	echo -ne '	 * @apiHeader {String} Authorization Authorization value. Generally "Bearer ACCESSTOKEN".\n' >> $3

	for j in "${paramsArray[@]}"
	do
	echo -ne '	 * @apiParam {String} '"$j"'\n' >> $3
	done
	
	if [[ "$actionName" == "read"* ]]; then
	for j in "${successArray[@]}"
	do
	echo -ne '	 * @apiSuccess {String} '"$j"'\n' >> $3
	done
	fi
	
	echo -ne '	 * @apiPermission Reseller\n' >> $3
	echo -ne '	 * @apiSampleRequest ?format=json&object='"$objectName"'&action='"$actionName"'\n' >> $3
	echo -ne '	 */\n' >> $3
}

function main {
	IFS=''
	fnames=( "${@:2}" )
	numberoflines=$(wc -l < $1)
	
	for i in "${fnames[@]}"
	do
		linenumber=1
		beg="null"
		end="null"
		functionfound="false"
		mbracketlevel=0
		
		while read line
		do
			if [[ $line == *"{"* ]]; then
				mbracketlevel=$((mbracketlevel+1))
			fi

			if [[ $line == *"function "$i* ]]; then
				beg=$linenumber
			fi
		
			if [ $functionfound == "true" ]; then
				copyrequest=$beg","$end"w dfmtemp"
				sed -n "$copyrequest" $1
				getApiParams dfmtemp
				setOptionalParams dfmtemp
				rm dfmtemp

				if [[ $i == "read"* ]]; then
					readModel $1
				fi
				
				createDocBlock $1 $i dfmtemp
			
				insertlineno=$((beg-1))
				sed -i "${insertlineno}r dfmtemp" $1
			
				rm dfmtemp
				break
			fi

			if [[ $line == *"}"* ]]; then
				mbracketlevel=$((mbracketlevel-1))

				if [[ "$beg" != "null" && $mbracketlevel -eq 1 ]]; then
					functionfound="true"
					end=$linenumber
				fi
			fi
			linenumber=$((linenumber+1))
			
		done < $1
	done
}

paramsArray=()
successArray=()

main "$@"
